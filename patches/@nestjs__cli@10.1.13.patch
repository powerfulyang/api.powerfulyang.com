diff --git a/.idea/424afb26bf2cf7c1cb37f2bc9687671a.iml b/.idea/424afb26bf2cf7c1cb37f2bc9687671a.iml
new file mode 100644
index 0000000000000000000000000000000000000000..24643cc37449b4bde54411a80b8ed61258225e34
--- /dev/null
+++ b/.idea/424afb26bf2cf7c1cb37f2bc9687671a.iml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="WEB_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/.tmp" />
+      <excludeFolder url="file://$MODULE_DIR$/temp" />
+      <excludeFolder url="file://$MODULE_DIR$/tmp" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
index 0000000000000000000000000000000000000000..03d9549ea8e4ada36fb3ecbc30fef08175b7d728
--- /dev/null
+++ b/.idea/inspectionProfiles/Project_Default.xml
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="Eslint" enabled="true" level="WARNING" enabled_by_default="true" />
+  </profile>
+</component>
\ No newline at end of file
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
index 0000000000000000000000000000000000000000..8c47423b2aa14dacb432798640d130f531eb943b
--- /dev/null
+++ b/.idea/modules.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/424afb26bf2cf7c1cb37f2bc9687671a.iml" filepath="$PROJECT_DIR$/.idea/424afb26bf2cf7c1cb37f2bc9687671a.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
diff --git a/lib/compiler/swc/swc-compiler.js b/lib/compiler/swc/swc-compiler.js
index e6c74a003a42e67c4e20842de7fc78cc5108542f..b126a20f89877a90bf0584f43b0c99f86d0fb2a3 100644
--- a/lib/compiler/swc/swc-compiler.js
+++ b/lib/compiler/swc/swc-compiler.js
@@ -104,11 +104,11 @@ class SwcCompiler extends base_compiler_1.BaseCompiler {
         // jsc.baseUrl should be resolved by the caller, if it's passed as an object.
         // https://github.com/swc-project/swc/pull/7827
         if (swcOptions?.jsc?.baseUrl) {
-            if (swcrcFilePath) {
-                swcOptions.jsc.baseUrl = path.join(path.dirname(swcrcFilePath), swcOptions.jsc.baseUrl);
-            }
-            else {
-                swcOptions.jsc.baseUrl = path.join(path.dirname(configuration.sourceRoot), swcOptions.jsc.baseUrl);
+            // by default, baseUrl is generated by `swcDefaultsFactory()` as an absolute path
+            if(!path.isAbsolute(swcOptions.jsc.baseUrl)) {
+                // if baseUrl is a relative path, it most likely be defined in a swcrc file
+                const _swcrcFilePath = path.join(process.cwd(), swcrcFilePath ?? '.swcrc');
+                swcOptions.jsc.baseUrl = path.join(path.dirname(_swcrcFilePath), swcOptions.jsc.baseUrl);
             }
         }
         await swcCli.default({