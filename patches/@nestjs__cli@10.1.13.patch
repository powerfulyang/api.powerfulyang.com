diff --git a/.idea/424afb26bf2cf7c1cb37f2bc9687671a.iml b/.idea/424afb26bf2cf7c1cb37f2bc9687671a.iml
new file mode 100644
index 0000000000000000000000000000000000000000..24643cc37449b4bde54411a80b8ed61258225e34
--- /dev/null
+++ b/.idea/424afb26bf2cf7c1cb37f2bc9687671a.iml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="WEB_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/.tmp" />
+      <excludeFolder url="file://$MODULE_DIR$/temp" />
+      <excludeFolder url="file://$MODULE_DIR$/tmp" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
index 0000000000000000000000000000000000000000..03d9549ea8e4ada36fb3ecbc30fef08175b7d728
--- /dev/null
+++ b/.idea/inspectionProfiles/Project_Default.xml
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="Eslint" enabled="true" level="WARNING" enabled_by_default="true" />
+  </profile>
+</component>
\ No newline at end of file
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
index 0000000000000000000000000000000000000000..8c47423b2aa14dacb432798640d130f531eb943b
--- /dev/null
+++ b/.idea/modules.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/424afb26bf2cf7c1cb37f2bc9687671a.iml" filepath="$PROJECT_DIR$/.idea/424afb26bf2cf7c1cb37f2bc9687671a.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
diff --git a/lib/compiler/swc/swc-compiler.js b/lib/compiler/swc/swc-compiler.js
index e6c74a003a42e67c4e20842de7fc78cc5108542f..4d0b13f1129630c0be31b892276d958f230ac758 100644
--- a/lib/compiler/swc/swc-compiler.js
+++ b/lib/compiler/swc/swc-compiler.js
@@ -96,24 +96,11 @@ class SwcCompiler extends base_compiler_1.BaseCompiler {
             });
         }
     }
-    async runSwc(configuration, options, extras, swcrcFilePath) {
+    async runSwc(configuration, options, extras) {
         process.nextTick(() => console.log(constants_1.SWC_LOG_PREFIX, chalk.cyan('Running...')));
         const swcCli = this.loadSwcCliBinary();
-        const swcRcFile = await this.getSwcRcFileContentIfExists(swcrcFilePath);
-        const swcOptions = this.deepMerge(options.swcOptions, swcRcFile);
-        // jsc.baseUrl should be resolved by the caller, if it's passed as an object.
-        // https://github.com/swc-project/swc/pull/7827
-        if (swcOptions?.jsc?.baseUrl) {
-            if (swcrcFilePath) {
-                swcOptions.jsc.baseUrl = path.join(path.dirname(swcrcFilePath), swcOptions.jsc.baseUrl);
-            }
-            else {
-                swcOptions.jsc.baseUrl = path.join(path.dirname(configuration.sourceRoot), swcOptions.jsc.baseUrl);
-            }
-        }
+        // for windows, do not pass an object to swcOptions
         await swcCli.default({
-            ...options,
-            swcOptions,
             cliOptions: {
                 ...options.cliOptions,
                 watch: extras.watch,